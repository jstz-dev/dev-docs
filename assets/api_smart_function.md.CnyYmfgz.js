import{_ as e,c as t,ag as a,o as i}from"./chunks/framework.qSHG2lgv.js";const k=JSON.parse('{"title":"ðŸ’¡ SmartFunction","description":"","frontmatter":{},"headers":[],"relativePath":"api/smart_function.md","filePath":"api/smart_function.md"}'),n={name:"api/smart_function.md"};function r(o,s,h,l,p,c){return i(),t("div",null,s[0]||(s[0]=[a('<h1 id="ðŸ’¡-smartfunction" tabindex="-1">ðŸ’¡ SmartFunction <a class="header-anchor" href="#ðŸ’¡-smartfunction" aria-label="Permalink to &quot;ðŸ’¡ SmartFunction&quot;">â€‹</a></h1><p>The <code>SmartFunction</code> namespace provides an API to create and call<code>jstz</code> smart functions. New smart functions can be created with the <code>SmartFunction.create()</code> method and <code>SmartFunction.call()</code> is used for calling other smart functions.</p><p>All operations on <code>SmartFunction</code> are asynchronous.</p><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">â€‹</a></h2><p>We may deploy a new smart function programmatically by calling <code>SmartFunction.create()</code> with a single <code>string</code> argument. The smart function code must be valid ECMAScript. TypeScript is not supported when deploying functions using <code>SmartFunction.create</code>.</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> newSmartFunction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SmartFunction.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;export default handler () =&gt; new Response()&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>This will deploy a new smart function with the code <code>export default handler () =&gt; new Response()</code>, returning a <em>promise</em> which will resolve to the address of the new function.</p><p>Once a smart function is deployed we may call it from another smart function using the <code>SmartFunction.call()</code> method. To call a smart function we create a new <a href="./request.html">Request</a> object with scheme <code>tezos</code> and the address as the hostname.</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> newAddress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SmartFunction.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;export default handler () =&gt; new Response()&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SmartFunction.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">call</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`tezos://${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">newAddress</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="instance-methods" tabindex="-1">Instance Methods <a class="header-anchor" href="#instance-methods" aria-label="Permalink to &quot;Instance Methods&quot;">â€‹</a></h2><h3 id="smartfunction-call-request-request-promise-response" tabindex="-1"><code>SmartFunction.call(request: Request): Promise&lt;Response&gt;</code> <a class="header-anchor" href="#smartfunction-call-request-request-promise-response" aria-label="Permalink to &quot;`SmartFunction.call(request: Request): Promise&lt;Response&gt;`&quot;">â€‹</a></h3><p>Calls a <code>jstz</code> smart function with the given request, returning a promise that resolves to an HTTP <a href="./response.html"><code>Response</code></a> object.</p><p>The <code>request</code> parameter is a HTTP <a href="./request.html"><code>Request</code></a> object. The URL scheme <em>must</em> be <code>tezos</code> and the host <em>must</em> be the address of a deployed <code>jstz</code> smart function. The <code>Referer</code> header <em>must</em> not be set.</p><h3 id="smartfunction-create-code-string-promise-address" tabindex="-1"><code>SmartFunction.create(code : string): Promise&lt;Address&gt;</code> <a class="header-anchor" href="#smartfunction-create-code-string-promise-address" aria-label="Permalink to &quot;`SmartFunction.create(code : string): Promise&lt;Address&gt;`&quot;">â€‹</a></h3><p>Creates and deploys a new <code>jstz</code> smart function with the given code, returning a promise that resolves to the address of the newly deployed smart function.</p><p>The <code>code</code> must be a <code>string</code> containing an ECMAscript module. The module <em>must</em> define a default export of type <code>(request: Request) =&gt; Response | Promise&lt;Response&gt;</code>.</p>',16)]))}const u=e(n,[["render",r]]);export{k as __pageData,u as default};
