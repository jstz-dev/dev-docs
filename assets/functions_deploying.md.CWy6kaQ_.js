import{_ as i,c as t,ag as a,o as e}from"./chunks/framework.qSHG2lgv.js";const k=JSON.parse('{"title":"Deploying smart functions","description":"","frontmatter":{},"headers":[],"relativePath":"functions/deploying.md","filePath":"functions/deploying.md"}'),n={name:"functions/deploying.md"};function o(l,s,h,p,d,r){return e(),t("div",null,s[0]||(s[0]=[a('<h1 id="deploying-smart-functions" tabindex="-1">Deploying smart functions <a class="header-anchor" href="#deploying-smart-functions" aria-label="Permalink to &quot;Deploying smart functions&quot;">​</a></h1><p>Deploying a smart function to Jstz is different from deploying most web or JavaScript/TypeScript applications because you cannot change the code of a smart function or delete it after you deploy it. When you deploy a smart function, Jstz records code of the smart function in its ledger of transactions and there is no way to change or delete entries from the ledger.</p><h2 id="deploying-to-the-local-sandbox" tabindex="-1">Deploying to the local sandbox <a class="header-anchor" href="#deploying-to-the-local-sandbox" aria-label="Permalink to &quot;Deploying to the local sandbox&quot;">​</a></h2><p>You can use the local sandbox to test smart functions in a simulated environment.</p><ol><li><p>Ensure that Docker is installed.</p></li><li><p>Build the smart function as described in <a href="/dev-docs/functions/building.html">Building smart functions</a>.</p></li><li><p>Start the Jstz sandbox in a Docker container by running <code>jstz sandbox --container start</code>. The sandbox persists as long as the container is running.</p></li><li><p>Deploy the built smart function with the <code>jstz deploy</code> command, including the <code>-n dev</code> argument to deploy it to the sandbox, as in this example:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jstz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dist/index.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p>If the deployment is successful, the response includes the address of the deployed smart function.</p></li><li><p>If you need to fund the smart function, you can bridge funds from bootstrap accounts with the <code>jstz bridge deposit</code> command, as in this example, which uses the variable <code>&lt;ADDRESS&gt;</code> for the address of the deployed smart function:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jstz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bridge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deposit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bootstrap1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ADDRES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --amount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div></li><li><p>Verify that the smart function is deployed by calling it with the <code>jstz run</code> command or by checking its balance by running this command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jstz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> account</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> balance</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ADDRES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div></li></ol>',5)]))}const g=i(n,[["render",o]]);export{k as __pageData,g as default};
