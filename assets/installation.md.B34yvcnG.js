import{_ as i,c as a,ag as e,o as t}from"./chunks/framework.qSHG2lgv.js";const k=JSON.parse('{"title":"📦 Installing jstz","description":"","frontmatter":{},"headers":[],"relativePath":"installation.md","filePath":"installation.md"}'),l={name:"installation.md"};function n(h,s,o,d,p,r){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="📦-installing-jstz" tabindex="-1">📦 Installing <code>jstz</code> <a class="header-anchor" href="#📦-installing-jstz" aria-label="Permalink to &quot;📦 Installing \`jstz\`&quot;">​</a></h1><h2 id="download-and-install" tabindex="-1">Download and Install <a class="header-anchor" href="#download-and-install" aria-label="Permalink to &quot;Download and Install&quot;">​</a></h2><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>⚠️ <code>jstz</code> is only available on Unix-based systems. ⚠️</p></div><p>Ensure <code>docker</code> is installed on your system. If not, please follow <a href="https://docs.docker.com/get-docker/" target="_blank" rel="noreferrer">this guide</a>. Download and install <code>jstz</code> via NPM with this command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @jstz-dev/cli</span></span></code></pre></div><p>or with yarn:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @jstz-dev/cli</span></span></code></pre></div><p>Congratulations! 🎉 <code>jstz</code> is now installed and configured on your system. You are now ready to <a href="./quick_start.html">write your first smart function</a> 🚀.</p><h2 id="building-from-source" tabindex="-1">Building from Source <a class="header-anchor" href="#building-from-source" aria-label="Permalink to &quot;Building from Source&quot;">​</a></h2><p>Below are instruction on how to build <code>jstz</code> from source. Additionally, this section details how to install all the prerequisites needed to build <code>jstz</code> from sources.</p><h3 id="cloning-the-repository" tabindex="-1">Cloning the Repository <a class="header-anchor" href="#cloning-the-repository" aria-label="Permalink to &quot;Cloning the Repository&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/jstz-dev/jstz.git</span></span></code></pre></div><h3 id="prerequisites-📋" tabindex="-1">Prerequisites 📋 <a class="header-anchor" href="#prerequisites-📋" aria-label="Permalink to &quot;Prerequisites 📋&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Both <code>jstz</code> and Octez are packaged with Nix, a package manager and system configuration tool that makes building from sources easy! See the <a href="https://nixos.org/download.html" target="_blank" rel="noreferrer">Nix docs</a> for instructions for your system. Additionally, ensure <a href="https://nixos.wiki/wiki/Flakes#Enable_flakes" target="_blank" rel="noreferrer">Nix flakes are enabled</a>.</p></div><h4 id="llvm-🛠️" tabindex="-1">LLVM 🛠️ <a class="header-anchor" href="#llvm-🛠️" aria-label="Permalink to &quot;LLVM 🛠️&quot;">​</a></h4><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-iYyuz" id="tab-6Dum466" checked><label data-title="MacOS" for="tab-6Dum466">MacOS</label><input type="radio" name="group-iYyuz" id="tab-5Pdvd-r"><label data-title="Ubuntu" for="tab-5Pdvd-r">Ubuntu</label><input type="radio" name="group-iYyuz" id="tab-5-5A27w"><label data-title="Fedora" for="tab-5-5A27w">Fedora</label><input type="radio" name="group-iYyuz" id="tab-9Nuu7j6"><label data-title="Arch Linux" for="tab-9Nuu7j6">Arch Linux</label><input type="radio" name="group-iYyuz" id="tab-5drOhWL"><label data-title="Nix" for="tab-5drOhWL">Nix</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> llvm</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> llvm)/bin/clang&quot;</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clang-11</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clang-11</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clang</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clang</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clang</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clang</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nix-env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -iA</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nixpkgs.llvm</span></span></code></pre></div></div></div><h4 id="rust-🦀" tabindex="-1">Rust 🦀 <a class="header-anchor" href="#rust-🦀" aria-label="Permalink to &quot;Rust 🦀&quot;">​</a></h4><blockquote><p><code>jstz</code> requires a specific release of Rust. The version of Rust required is specified in the <code>rust-toolchain</code> file.</p></blockquote><p>Install the <a href="https://rustup.rs/" target="_blank" rel="noreferrer">Rust</a> toolchain:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --proto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;=https&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tlsv1.2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sSf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://sh.rustup.rs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sh</span></span></code></pre></div><h4 id="octez-🐙" tabindex="-1">Octez 🐙 <a class="header-anchor" href="#octez-🐙" aria-label="Permalink to &quot;Octez 🐙&quot;">​</a></h4><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The Nix shell ships with Octez binaries for convenience but it does take a little while to build for the very first time. Skip ahead to <a href="#building-👷‍♂️">Building</a></p></div><p>The jstz sandbox uses a custom distribution of Octez found <a href="https://gitlab.com/tezos/tezos/-/tree/jstz@octez-dev" target="_blank" rel="noreferrer">here</a>. See the <a href="https://tezos.gitlab.io/introduction/howtoget.html?highlight=building#compiling-with-make" target="_blank" rel="noreferrer">Octez docs</a> for instructions on building Octez from source.</p><p>Once Octez has been built, copy the following binaries to <code>jstz</code>:</p><ul><li><code>octez-client</code></li><li><code>octez-node</code></li><li><code>octez-smart-rollup-node</code></li></ul><h3 id="building-👷‍♂️" tabindex="-1">Building 👷‍♂️ <a class="header-anchor" href="#building-👷‍♂️" aria-label="Permalink to &quot;Building 👷‍♂️&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Using Nix, simply run <code>nix develop</code> to enter a shell with all build dependencies or use <code>direnv</code> to automatically enter the shell when you <code>cd</code> into the <code>jstz</code> directory.</p></div><p>The kernel can be built with:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><p>You can locate the resulting build artifact at <code>/target/wasm32-unknown-unknown/release/jstz_kernel.wasm</code>.</p><h3 id="running-the-sandbox-🏝️" tabindex="-1">Running the Sandbox 🏝️ <a class="header-anchor" href="#running-the-sandbox-🏝️" aria-label="Permalink to &quot;Running the Sandbox 🏝️&quot;">​</a></h3><p>You can start the sandbox with:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build-cli</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --bin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jstz</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sandbox</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><p>This will initially run <code>octez-node</code> and initialize <code>octez-client</code>. Once the client is initialized, the <code>jstz_kernel</code> and <code>jstz_bridge</code> is originated, a <code>octez-smart-rollup-node</code> and <code>jstz-node</code> is spun up.</p>`,34)]))}const u=i(l,[["render",n]]);export{k as __pageData,u as default};
