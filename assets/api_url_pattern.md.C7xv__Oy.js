import{_ as a,c as i,ag as t,o as n}from"./chunks/framework.qSHG2lgv.js";const c=JSON.parse('{"title":"üß© URLPattern","description":"","frontmatter":{},"headers":[],"relativePath":"api/url_pattern.md","filePath":"api/url_pattern.md"}'),e={name:"api/url_pattern.md"};function r(h,s,p,l,k,o){return n(),i("div",null,s[0]||(s[0]=[t(`<h1 id="üß©-urlpattern" tabindex="-1">üß© URLPattern <a class="header-anchor" href="#üß©-urlpattern" aria-label="Permalink to &quot;üß© URLPattern&quot;">‚Äã</a></h1><p><code>jstz</code>&#39;s <a href="hhttps://developer.mozilla.org/en-US/docs/Web/API/URLPattern" target="_blank" rel="noreferrer"><code>URLPattern</code></a> implementation is based on the <a href="https://urlpattern.spec.whatwg.org/" target="_blank" rel="noreferrer">URL Pattern</a> specification and using <a href="https://docs.rs/urlpattern/latest/urlpattern/" target="_blank" rel="noreferrer"><code>rust-urlpattern</code></a>.</p><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>‚ö†Ô∏è <code>jstz</code>&#39;s implementation is not spec compliant ‚ö†Ô∏è</p></div><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">‚Äã</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// A pattern can be constructed using a string for matching</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pattern</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http{s}?://*.example.com/books/:id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// \`test\` can be used to check for match</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pattern.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://store.example.com/books/123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// prints true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pattern.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com/books/123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// prints false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// \`exec\` can be used to match and access components</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> match</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pattern.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://store.example.com/books/123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(match.pathname); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// prints { input: &quot;/books/123&quot;, groups: { &quot;id&quot;: &quot;123&quot; } }</span></span></code></pre></div><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">‚Äã</a></h2><h3 id="new-urlpattern-input-urlpatterninput-baseurl-string-urlpattern" tabindex="-1"><code>new URLPattern(input?: URLPatternInput, baseURL?: string): URLPattern</code> <a class="header-anchor" href="#new-urlpattern-input-urlpatterninput-baseurl-string-urlpattern" aria-label="Permalink to &quot;\`new URLPattern(input?: URLPatternInput, baseURL?: string): URLPattern\`&quot;">‚Äã</a></h3><p>Creates a new <code>URLPattern</code> object from a given URL string or <code>URLPatternInit</code> and an optional base URL.</p><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p><strong>Spec deviation</strong>: <code>options</code> argument is not supported in the constructor.</p></div><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPatternInit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  protocol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  hostname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  pathname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  search</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  baseURL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPatternInput</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPatternInit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="instance-properties" tabindex="-1">Instance Properties <a class="header-anchor" href="#instance-properties" aria-label="Permalink to &quot;Instance Properties&quot;">‚Äã</a></h2><h3 id="readonly-urlpattern-protocol-string" tabindex="-1"><code>readonly URLPattern.protocol: string</code> <a class="header-anchor" href="#readonly-urlpattern-protocol-string" aria-label="Permalink to &quot;\`readonly URLPattern.protocol: string\`&quot;">‚Äã</a></h3><p>The pattern used to match the protocol part of a URL.</p><h3 id="readonly-urlpattern-username-string" tabindex="-1"><code>readonly URLPattern.username: string</code> <a class="header-anchor" href="#readonly-urlpattern-username-string" aria-label="Permalink to &quot;\`readonly URLPattern.username: string\`&quot;">‚Äã</a></h3><p>The pattern used to match the username part of a URL.</p><h3 id="readonly-urlpattern-password-string" tabindex="-1"><code>readonly URLPattern.password: string</code> <a class="header-anchor" href="#readonly-urlpattern-password-string" aria-label="Permalink to &quot;\`readonly URLPattern.password: string\`&quot;">‚Äã</a></h3><p>The pattern used to match the password part of a URL.</p><h3 id="readonly-urlpattern-hostname-string" tabindex="-1"><code>readonly URLPattern.hostname: string</code> <a class="header-anchor" href="#readonly-urlpattern-hostname-string" aria-label="Permalink to &quot;\`readonly URLPattern.hostname: string\`&quot;">‚Äã</a></h3><p>The pattern used to match the hostname part of a URL.</p><h3 id="readonly-urlpattern-port-string" tabindex="-1"><code>readonly URLPattern.port: string</code> <a class="header-anchor" href="#readonly-urlpattern-port-string" aria-label="Permalink to &quot;\`readonly URLPattern.port: string\`&quot;">‚Äã</a></h3><p>The pattern used to match the port part of a URL.</p><h3 id="readonly-urlpattern-pathname-string" tabindex="-1"><code>readonly URLPattern.pathname: string</code> <a class="header-anchor" href="#readonly-urlpattern-pathname-string" aria-label="Permalink to &quot;\`readonly URLPattern.pathname: string\`&quot;">‚Äã</a></h3><p>The pattern used to match the pathname part of a URL.</p><h3 id="readonly-urlpattern-search-string" tabindex="-1"><code>readonly URLPattern.search: string</code> <a class="header-anchor" href="#readonly-urlpattern-search-string" aria-label="Permalink to &quot;\`readonly URLPattern.search: string\`&quot;">‚Äã</a></h3><p>The pattern used to match the search part of a URL.</p><h3 id="readonly-urlpattern-hash-string" tabindex="-1"><code>readonly URLPattern.hash: string</code> <a class="header-anchor" href="#readonly-urlpattern-hash-string" aria-label="Permalink to &quot;\`readonly URLPattern.hash: string\`&quot;">‚Äã</a></h3><p>The pattern used to match the fragment part of a URL.</p><h2 id="instance-methods" tabindex="-1">Instance Methods <a class="header-anchor" href="#instance-methods" aria-label="Permalink to &quot;Instance Methods&quot;">‚Äã</a></h2><h3 id="urlpattern-test-input-urlpatterninput-baseurl-string-boolean" tabindex="-1"><code>URLPattern.test(input?: URLPatternInput, baseURL?: string): boolean</code> <a class="header-anchor" href="#urlpattern-test-input-urlpatterninput-baseurl-string-boolean" aria-label="Permalink to &quot;\`URLPattern.test(input?: URLPatternInput, baseURL?: string): boolean\`&quot;">‚Äã</a></h3><p>Returns a boolean indicating if the given input matches the current pattern. The input is a URL or an object of URL parts.</p><h3 id="urlpattern-exec-input-urlpatterninput-baseurl-string-urlpatternresult-null" tabindex="-1"><code>URLPattern.exec(input?: URLPatternInput, baseURL?: string): URLPatternResult | null</code> <a class="header-anchor" href="#urlpattern-exec-input-urlpatterninput-baseurl-string-urlpatternresult-null" aria-label="Permalink to &quot;\`URLPattern.exec(input?: URLPatternInput, baseURL?: string): URLPatternResult | null\`&quot;">‚Äã</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPatternComponentResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  input</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  groups</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPatternResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  inputs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPatternInit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[];</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  protocol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPatternComponentResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPatternComponentResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPatternComponentResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  hostname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPatternComponentResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPatternComponentResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  pathname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPatternComponentResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  search</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPatternComponentResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLPatternComponentResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns either an object containing the results of matching the URL to the pattern, or <code>null</code> if the URL does not match the pattern. The input is a URL or object of URL parts.</p>`,33)]))}const g=a(e,[["render",r]]);export{c as __pageData,g as default};
