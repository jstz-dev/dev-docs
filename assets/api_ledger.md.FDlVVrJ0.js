import{_ as s,c as a,ag as i,o as t}from"./chunks/framework.qSHG2lgv.js";const k=JSON.parse('{"title":"ðŸ’° Ledger","description":"","frontmatter":{},"headers":[],"relativePath":"api/ledger.md","filePath":"api/ledger.md"}'),d={name:"api/ledger.md"};function r(n,e,l,h,o,p){return t(),a("div",null,e[0]||(e[0]=[i('<h1 id="ðŸ’°-ledger" tabindex="-1">ðŸ’° Ledger <a class="header-anchor" href="#ðŸ’°-ledger" aria-label="Permalink to &quot;ðŸ’° Ledger&quot;">â€‹</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The Ledger API is deprecated and will be removed in future versions of Jstz</p></div><p>The <code>Ledger</code> object maintains a persistent ledger of all accounts and their balances of L2 tez (stored as mutez). Additionally, the <code>Ledger</code> object stores the &#39;self address&#39; of the smart function, which is the address of the smart function itself.</p><p>All operations on <code>Ledger</code> are synchronous and atomic, committed if the request to the smart function succeeds.</p><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">â€‹</a></h2><p>We can obtain the balance of an account using <code>Ledger.balance()</code>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> alice</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Address</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tz1abc...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Ledger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">balance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alice)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0</span></span></code></pre></div><p>The <em>self address</em> of the smart function is accessible from the readonly property <code>Ledger.selfAddress</code>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Ledger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">balance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Ledger.selfAddress)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 420</span></span></code></pre></div><p>Transfers are performed using <code>Ledger.transfer()</code>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ledger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">transfer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alice, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">420</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Transfer 420 mutez to Alice from the balance of the smart function</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Ledger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">balance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alice)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 420</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Ledger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">balance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Ledger.selfAddress)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0</span></span></code></pre></div><h2 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-label="Permalink to &quot;Types&quot;">â€‹</a></h2><h3 id="type-address-string" tabindex="-1"><code>type Address = string</code> <a class="header-anchor" href="#type-address-string" aria-label="Permalink to &quot;`type Address = string`&quot;">â€‹</a></h3><p>An address is a string of 36 characters, starting with <code>KT1</code>.</p><h2 id="instance-properties" tabindex="-1">Instance Properties <a class="header-anchor" href="#instance-properties" aria-label="Permalink to &quot;Instance Properties&quot;">â€‹</a></h2><h3 id="readonly-ledger-selfaddress-address" tabindex="-1"><code>readonly Ledger.selfAddress: Address</code> <a class="header-anchor" href="#readonly-ledger-selfaddress-address" aria-label="Permalink to &quot;`readonly Ledger.selfAddress: Address`&quot;">â€‹</a></h3><p>The <code>selfAddress</code> property of the <code>Ledger</code> object is the address of the smart function.</p><h2 id="instance-methods" tabindex="-1">Instance Methods <a class="header-anchor" href="#instance-methods" aria-label="Permalink to &quot;Instance Methods&quot;">â€‹</a></h2><h3 id="ledger-balance-address-address-mutez" tabindex="-1"><code>Ledger.balance(address: Address): Mutez</code> <a class="header-anchor" href="#ledger-balance-address-address-mutez" aria-label="Permalink to &quot;`Ledger.balance(address: Address): Mutez`&quot;">â€‹</a></h3><p>Returns the balance of the given address in mutez, or <code>0</code> if the address is not in the ledger.</p><h3 id="ledger-transfer-dst-address-amount-mutez-void" tabindex="-1"><code>Ledger.transfer(dst: Address, amount: Mutez): void</code> <a class="header-anchor" href="#ledger-transfer-dst-address-amount-mutez-void" aria-label="Permalink to &quot;`Ledger.transfer(dst: Address, amount: Mutez): void`&quot;">â€‹</a></h3><p>Transfers the given amount of mutez from the balance of the smart function to the given address. If the smart function does not have enough balance, this throws an error.</p>',22)]))}const g=s(d,[["render",r]]);export{k as __pageData,g as default};
