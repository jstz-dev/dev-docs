import{_ as e,c as o,ag as r,o as s}from"./chunks/framework.qSHG2lgv.js";const a="/dev-docs/assets/architecture.B3V3eg8R.png",d=JSON.parse('{"title":"Architecture","description":"","frontmatter":{},"headers":[],"relativePath":"architecture/overview.md","filePath":"architecture/overview.md"}'),n={name:"architecture/overview.md"};function c(i,t,l,m,h,u){return s(),o("div",null,t[0]||(t[0]=[r('<h1 id="architecture" tabindex="-1">Architecture <a class="header-anchor" href="#architecture" aria-label="Permalink to &quot;Architecture&quot;">â€‹</a></h1><p>The Jstz runtime runs as a layer on top of the Tezos blockchain network. A group of Tezos Smart Rollup nodes host the runtime as a kind of cluster, which means that they perform these tasks:</p><ul><li>Accepting new smart functions for deployment</li><li>Maintaining smart function storage</li><li>Accepting calls to smart functions from clients and running smart function logic</li></ul><p>To secure the Jstz runtime, these nodes frequently report the state of Jstz to Tezos, including the state of all smart functions, storage, and user accounts. These reports, known as <em>commitments</em>, ensure that the nodes are processing calls to Jstz smart functions correctly. If any two nodes post commitments that don&#39;t match, the framework of Smart Rollups allows the nodes to step through the Jstz transactions and determine the correct state. For more information about how Smart Rollups nodes work, see <a href="https://docs.tezos.com/architecture/smart-rollups" target="_blank" rel="noreferrer">Smart Rollups</a> on docs.tezos.com.</p><p>This diagram summarizes the interaction between Jstz Smart Rollup nodes and clients:</p><p><img src="'+a+'" alt="Diagram showing clients sending transactions to Smart Rollup nodes, which run smart function code and publish commitments to Tezos"></p>',6)]))}const f=e(n,[["render",c]]);export{d as __pageData,f as default};
